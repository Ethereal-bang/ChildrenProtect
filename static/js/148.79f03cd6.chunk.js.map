{"version":3,"file":"static/js/148.79f03cd6.chunk.js","mappings":"+OAEaA,EAAQ,SAACC,EAAkBC,GACpC,IAAMC,EAAO,IAAIC,SAGjB,OAFAD,EAAKE,OAAO,WAAYJ,GACxBE,EAAKE,OAAO,WAAYH,GACjBI,EAAAA,EAAAA,KAAa,eAAgBH,EACvC,EAGYI,EAAsB,SAACC,GAChC,IAAML,EAAO,IAAIC,SAEjB,OADAD,EAAKE,OAAO,QAASG,GACdF,EAAAA,EAAAA,KAAa,0BAA2BH,EAClD,EAGYM,EAAa,SAACD,EAAeE,GACtC,IAAMP,EAAO,IAAIC,SAGjB,OAFAD,EAAKE,OAAO,QAASG,GACrBL,EAAKE,OAAO,OAAQK,GACbJ,EAAAA,EAAAA,KAAa,2BAA4BH,EACnD,EAGYQ,EAAS,SAACC,EAAaJ,GAChC,IAAML,EAAO,IAAIC,SAGjB,OAFAD,EAAKE,OAAO,cAAeO,GAC3BT,EAAKE,OAAO,QAASG,GACdF,EAAAA,EAAAA,KAAa,iCAAkCH,EACzD,C,wFC3BYG,EAAUO,IAAAA,OAAa,CAChCC,QAAS,2BAETC,OAAQ,SAGZT,EAAQU,aAAaC,QAAQC,KAAI,SAACC,GAC1B,IAAMC,GAAQC,EAAAA,EAAAA,KAId,OAHID,GAASD,EAAOG,UAChBH,EAAOG,QAAQF,MAAQA,GAEpBD,CACV,IAAE,SAACI,GACA,OAAOC,QAAQC,OAAQF,EAC1B,G,0ICXU,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,WAAkB,GAA9C,eAAKC,EAAL,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAiB,IAAzC,eAAKnB,EAAL,KAAYsB,EAAZ,KACA,GAAsBH,EAAAA,EAAAA,UAAiB,IAAvC,eAAKjB,EAAL,KAAWqB,EAAX,KACIC,GAAWC,EAAAA,EAAAA,MAoCf,OACE,gBAAKC,UAAU,gBAAf,UACE,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,QAAf,uCAGA,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,OAAf,iCACA,gBAAKA,UAAU,QAAf,UACE,kBACEC,KAAK,OACLC,YAAY,iCACZC,MAAO7B,EACP8B,SAAU,SAACC,GAAKT,EAASS,EAAEC,OAAOH,MAAO,OAG7C,gBAAKH,UAAU,OAAf,iCACA,iBAAKA,UAAU,WAAf,WACE,kBACEC,KAAK,OACLM,MAAO,CAAEC,MAAM,QAAS,YAAgBd,EAA+B,GAArB,mBAAwB,MAASA,EAA2B,GAAnB,oBAC3FQ,YAAY,iCACZC,MAAO3B,EACP4B,SAAU,SAACC,GAAKR,EAAQQ,EAAEC,OAAOH,MAAO,KAE1C,mBAAQH,UAAU,cAAcO,MAAO,CAAC,MAAQ,SAAUE,QAjCtD,YACZpC,EAAAA,EAAAA,IAAoBC,GAAOoC,MAAK,SAAAC,GAC9B,OAAOC,EAAA,WAAgBD,EAAI1C,KAAK2C,QACjC,IAAE,SAAAvB,GACD,OAAOuB,EAAA,SAAcvB,EAAIwB,SAAS5C,KAAK2C,QACxC,GACF,EA2BS,gDAEF,gBAAKZ,UAAU,OAAf,SAEKN,GAEG,oBADF,gBAAKM,UAAU,OAAf,0EAMR,gBAAKA,UAAU,WAAf,UACE,mBAAQS,QAxEL,WAGLnC,EAAMwC,QAKVvC,EAAAA,EAAAA,IAAWD,EAAOE,GAAMkC,MAAK,SAAAC,GAW3B,OAVAhB,GAAW,GACXoB,YAAW,WACTjB,EAAS,eAAgB,CACvBkB,SAAQ,EACRC,MAAO,CACL3C,MAAAA,IAIL,GAAE,GACIsC,EAAA,WAAgBD,EAAI1C,KAAK2C,QACjC,IAAE,SAAAvB,GAED,OADAM,GAAW,GACJiB,EAAA,SAAcvB,EAAIwB,SAAS5C,KAAK2C,QACxC,IAnBCM,MAAM,6CAoBT,EAgDO,sCAKT,C","sources":["api/loginApi.ts","api/myAxios.ts","pages/geback/GetBack.tsx"],"sourcesContent":["import {myAxios} from \"./myAxios\";\r\n\r\nexport const login = (username: string, password: string) => {\r\n    const data = new FormData();\r\n    data.append(\"username\", username);\r\n    data.append(\"password\", password);\r\n    return myAxios.post(\"/admin/login\", data);\r\n}\r\n\r\n// 找回密码-获取验证码\r\nexport const getVerificationCode = (phone: string) => {\r\n    const data = new FormData();\r\n    data.append(\"phone\", phone);\r\n    return myAxios.post(\"/admin/password/getCode\", data);\r\n}\r\n\r\n// 找回密码-验证码是否匹配\r\nexport const verifyCode = (phone: string, code: string) => {\r\n    const data = new FormData();\r\n    data.append(\"phone\", phone);\r\n    data.append(\"code\", code);\r\n    return myAxios.post(\"/admin/password/sendCode\", data);\r\n}\r\n\r\n// 重置密码\r\nexport const setPwd = (pwd: string, phone: string) => {\r\n    const data = new FormData();\r\n    data.append(\"newPassword\", pwd);\r\n    data.append(\"phone\", phone);\r\n    return myAxios.post(\"/admin/password/setNewPassword\", data);\r\n}","import axios from \"axios\";\r\nimport getToken from \"../utils/getToken\";\r\n\r\nexport const myAxios = axios.create({\r\n    baseURL: \"http://124.223.99.4:8080\",\r\n    // timeout: 2000,\r\n    method: \"POST\",  // 默认POST\r\n})\r\n\r\nmyAxios.interceptors.request.use((config) => {\r\n        const token = getToken();\r\n        if (token && config.headers) {\r\n            config.headers.token = token;\r\n        }\r\n        return config;\r\n    }, (err) => {\r\n        return Promise.reject((err));\r\n    }\r\n)","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './GetBack.css'\r\nimport {getVerificationCode, verifyCode} from \"../../api/loginApi\";\r\nimport {message} from \"antd\";\r\n\r\nexport default function GetBack() {\r\n  let [isRight, setIsRight] = useState<boolean>(true)\r\n  let [phone, setPhone] = useState<string>('')\r\n  let [code, setCode] = useState<string>('')\r\n  let navigate = useNavigate()\r\n  let next = () => {\r\n\r\n    // 做手机号验证\r\n    if(!phone.trim()){\r\n      alert('手机号不能为空')\r\n      return\r\n    }\r\n    // 下一步\r\n    verifyCode(phone, code).then(res => {\r\n      setIsRight(true)\r\n      setTimeout(() => {\r\n        navigate('/setpassword', {\r\n          replace:true,\r\n          state: {  // phone传给重置密码页面\r\n            phone,\r\n          }\r\n        })\r\n\r\n      }, 0);\r\n      return message.success(res.data.message);\r\n    }, err => {\r\n      setIsRight(false)\r\n      return message.error(err.response.data.message);\r\n    })\r\n  }\r\n\r\n  // 发送验证码\r\n  let getCode = ()=>{\r\n    getVerificationCode(phone).then(res => {\r\n      return message.success(res.data.message);\r\n    }, err => {\r\n      return message.error(err.response.data.message);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='getback-outer'>\r\n      <div className=\"loginBox\">\r\n        <div className=\"title\">\r\n          找回密码\r\n        </div>\r\n        <div className=\"mid\">\r\n          <div className=\"user\">手机号</div>\r\n          <div className='input'>\r\n            <input\r\n              type=\"text\"\r\n              placeholder='输入用户名' \r\n              value={phone}\r\n              onChange={(e)=>{setPhone(e.target.value)}}\r\n            />\r\n          </div>\r\n          <div className=\"pass\">验证码</div>\r\n          <div className='password'>\r\n            <input \r\n              type=\"text\"\r\n              style={{ width:'200px', \"borderColor\": !isRight ? 'rgb(216, 26, 26)' : '',\"color\":!isRight?\"rgb(216, 26, 26)\":\"\"}} \r\n              placeholder='输入验证码' \r\n              value={code}\r\n              onChange={(e)=>{setCode(e.target.value)}}\r\n            />\r\n            <button className='getpassword' style={{\"width\":\"150px\"}} onClick={getCode}>获取验证码</button>\r\n          </div>\r\n          <div className=\"tips\">\r\n            {\r\n              !isRight ?\r\n                <div className=\"left\">验证码错误重新输入</div>\r\n                : <div />\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"loginBtn\">\r\n          <button onClick={next}>下一步</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["login","username","password","data","FormData","append","myAxios","getVerificationCode","phone","verifyCode","code","setPwd","pwd","axios","baseURL","method","interceptors","request","use","config","token","getToken","headers","err","Promise","reject","GetBack","useState","isRight","setIsRight","setPhone","setCode","navigate","useNavigate","className","type","placeholder","value","onChange","e","target","style","width","onClick","then","res","message","response","trim","setTimeout","replace","state","alert"],"sourceRoot":""}