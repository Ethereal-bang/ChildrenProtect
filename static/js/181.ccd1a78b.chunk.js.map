{"version":3,"file":"static/js/181.ccd1a78b.chunk.js","mappings":"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","sources":["views/Data/Data.tsx","api/dataApi.ts"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './Data.css'\r\nimport finished from '../../assets/icons/finished.png'\r\nimport doing from '../../assets/icons/doing.png'\r\nimport {showCardData, showDataMap} from \"../../api/dataApi\";\r\nimport {message} from \"antd\";\r\n\r\ninterface cardProps {\r\n  title: string,\r\n  img: string,\r\n  count: number\r\n}\r\ninterface CardsData {\r\n  ChildrenTotal: number,\r\n  EventTotal: number,\r\n  PersonTotal: number,\r\n}\r\n\r\nfunction MyCard(props: cardProps) {\r\n  // let { title, img, count } = props\r\n  let { title, count } = props\r\n  return (\r\n    <div className='card'>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"count\">{count}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface map {\r\n  longitude : number   //经度\r\n  latitude : number // 纬度\r\n  status  :  string\r\n}\r\ninterface mapProps{\r\n  mapList : map[]\r\n}\r\n\r\nexport default function Data() {\r\n  const [data, setData] = useState<CardsData>({\r\n    ChildrenTotal: 0,\r\n    EventTotal: 0,\r\n    PersonTotal: 0,\r\n  });\r\n  const [mapList, setMapList] = useState<map[]>([]);\r\n\r\n  // 卡片显示内容\r\n  const cardList:cardProps[] = [\r\n    {\r\n      title: '强制报告事件总数',\r\n      count: data.EventTotal,\r\n      img: ''\r\n    },\r\n    {\r\n      title: '工作人员数量',\r\n      count: data.PersonTotal,\r\n      img: ''\r\n    },\r\n    {\r\n      title: '已帮助儿童数量',\r\n      count: data.ChildrenTotal,\r\n      img: ''\r\n    }\r\n  ]\r\n\r\n  // 获取数据概览\r\n  useEffect(() => {\r\n    showCardData().then(res => {\r\n      setData(res.data.data)\r\n    }, err => {\r\n      return message.error(err.response.data.message);\r\n    })\r\n  }, [])\r\n\r\n  // 获取地图数据\r\n  useEffect(() => {\r\n    showDataMap().then(res => {\r\n      interface ResData {\r\n        Lon: number,\r\n        Lat: number,\r\n      }\r\n      interface Res {\r\n        Doing: Array<ResData>,\r\n        Finished: Array<ResData>,\r\n      }\r\n      const {Doing, Finished} = res.data.data as Res;\r\n      const obj: map[] = [];\r\n      Doing.forEach(item => {\r\n        obj.push({\r\n          latitude: item.Lat,\r\n          longitude: item.Lon,\r\n          status: \"doing\",\r\n        })\r\n      })\r\n      Finished.forEach(item => {\r\n        obj.push({\r\n          latitude: item.Lat,\r\n          longitude: item.Lon,\r\n          status: \"finished\",\r\n        })\r\n      })\r\n      obj.push(\r\n            {\r\n              longitude:  29.7302,  //经度\r\n              latitude:  150, // 纬度\r\n              status: \"finished\"\r\n            },\r\n      )\r\n      setMapList(obj);\r\n    }, err => {\r\n      return message.error(err.response.data.message);\r\n    })\r\n  }, [])\r\n\r\n  function MyMap(props: mapProps) {\r\n    let {mapList} = props\r\n    interface Coordinate {  // 坐标\r\n      ing: number,\r\n      lat: number,\r\n    }\r\n    const [center, setCenter] = useState<Coordinate>({\r\n      ing: 106.5907,\r\n      lat: 29.7320,\r\n    }); // 地图中心点\r\n\r\n    useEffect(() => { // 已返回任一点为中心点\r\n      if (mapList[0]) {\r\n        setCenter({\r\n          ing: mapList[0].longitude,\r\n          lat: mapList[0].latitude,\r\n        })\r\n      }\r\n    }, [mapList])\r\n\r\n    useEffect(() => {\r\n      let map = new BMapGL.Map('mymap');\r\n      map.centerAndZoom(new BMapGL.Point(center.ing, center.lat), 16);\r\n      map.enableScrollWheelZoom();\r\n\r\n      let finishedIcon = new BMapGL.Icon(finished, new BMapGL.Size(45, 50));\r\n      let doingIcon = new BMapGL.Icon(doing, new BMapGL.Size(45, 54));\r\n\r\n      mapList.forEach((marker)=>{\r\n        let {longitude  , latitude} = marker\r\n        let Pointer :any\r\n        if(marker.status === 'finished')\r\n        {\r\n          // 创建点标记\r\n          Pointer = new BMapGL.Marker(new BMapGL.Point(+latitude ,+longitude ) ,{\r\n            icon: finishedIcon\r\n          })\r\n        }else{\r\n          // 创建点标记\r\n          Pointer = new BMapGL.Marker(new BMapGL.Point(+latitude ,+longitude ) ,{\r\n            icon: doingIcon\r\n          })\r\n        }\r\n\r\n        map.addOverlay(Pointer)\r\n      })\r\n\r\n    }, [center.ing, center.lat, mapList])\r\n\r\n    return (\r\n        <div id='mymap' style={{ \"width\": \"100%\", \"height\": \"100%\", \"textAlign\": \"center\", \"backgroundColor\": \"#f3f3f3\", \"boxShadow\": \"0px 0px 10px rgba(0,0,0,0.2)\" , zIndex:\"99\" }}>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='data-outer'>\r\n      <div className=\"cardBox\">\r\n        {\r\n          cardList.map((item) => {\r\n            return <MyCard {...item} key={item.title}/>\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"mapBox\">\r\n        <MyMap mapList={mapList} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import {myAxios} from \"./myAxios\";\r\n\r\n// 数据概览\r\nexport const showCardData = () => {\r\n    return myAxios(\"admin/showDataCard\");\r\n}\r\n\r\n// 地图数据\r\nexport const showDataMap = () => {\r\n    return myAxios(\"admin/showDataMap\");\r\n}"],"names":["MyCard","props","title","count","className","Data","useState","ChildrenTotal","EventTotal","PersonTotal","data","setData","mapList","setMapList","cardList","img","MyMap","ing","lat","center","setCenter","useEffect","longitude","latitude","map","BMapGL","Map","centerAndZoom","Point","enableScrollWheelZoom","finishedIcon","Icon","Size","doingIcon","forEach","marker","Pointer","status","Marker","icon","addOverlay","id","style","zIndex","myAxios","then","res","err","message","response","Doing","Finished","obj","item","push","Lat","Lon","key"],"sourceRoot":""}