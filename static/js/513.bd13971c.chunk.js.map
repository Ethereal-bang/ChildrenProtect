{"version":3,"file":"static/js/513.bd13971c.chunk.js","mappings":"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","sources":["utils/getId.ts","views/Set/Set.tsx","api/setApi.ts","utils/getPhone.ts"],"sourcesContent":["export default function getId(): string | null {\r\n    return localStorage.getItem(\"id\");\r\n}","import {useState} from \"react\";\r\nimport {Button, Form, Input, message, Modal} from \"antd\";\r\nimport './Set.css'\r\nimport getId from \"../../utils/getId\";\r\nimport {modifyPhone, modifyPwd, verificationCode} from \"../../api/setApi\";\r\nimport getPhone from \"../../utils/getPhone\";\r\n\r\nexport default function Set (){\r\n    const [visible, setVisible] = useState<boolean[]>(new Array(2).fill(false));\r\n    const [form1] = Form.useForm(), // 修改账户表单\r\n        [form2] = Form.useForm();   // 修改密码表单\r\n\r\n    function showModal(order: 0 | 1) {\r\n        setVisible(arr => {\r\n            const res = [...arr]\r\n            res[order] = true;\r\n            return res;\r\n        })\r\n    }\r\n    // 获取验证码\r\n    const getCode = (phone: string) => {\r\n        const id = getId();\r\n        if (!id) return message.error(\"缺少Id字段\");\r\n        verificationCode(id, phone).then(res => {\r\n            return message.success(res.data.message);\r\n        }, err => {\r\n            return message.error(err.response.data.message);\r\n        })\r\n    }\r\n    function handleForm(flag: boolean) {    // true表单1，false表单2\r\n        const id = getId();\r\n        if (!id) return message.error(\"缺少Id字段\");\r\n        flag\r\n            ? form1\r\n                .validateFields()\r\n                .then(val => {\r\n                    if (!val.code) return message.warn(\"请填写验证码\");\r\n                    modifyPhone(id, val.newPhone, val.code)\r\n                        .then(res => {\r\n                            return message.success(res.data.message);\r\n                        }, err => {\r\n                            return message.error(err.response.data.message);\r\n                        })\r\n                    form1.resetFields();\r\n                }, info => {\r\n                    return message.error(\"Validate Failed: \", info);\r\n                })\r\n            : form2\r\n                .validateFields()\r\n                .then(val => {\r\n                    const {oldPassword, newPassword} = val;\r\n                    if (!oldPassword || !newPassword) return message.error(\"请填写完整\");\r\n                    modifyPwd(id, oldPassword, newPassword).then(res => {\r\n                        return message.success(res.data.message);\r\n                    }, err => {\r\n                        return message.error(err.response.data.message);\r\n                    })\r\n                    form1.resetFields();\r\n                }, info => {\r\n                    return message.error(\"Validate Failed: \", info);\r\n                })\r\n        setVisible([false, false]);\r\n    }\r\n\r\n    return <>\r\n        <form className=\"form-outer\">\r\n            <label>\r\n                <div className=\"title\">管理员账户名</div>\r\n                <input type=\"text\" placeholder={getPhone() || \"显示错误\"}/>    {/*原账户名*/}\r\n                <button type={\"button\"} onClick={() => showModal(0)}>修改账户名</button>\r\n            </label>\r\n            <label>\r\n                <div className=\"title\">管理员账户密码</div>\r\n                <input type={\"password\"} placeholder={\"*******\"}/>    {/*原*/}\r\n                <button type={\"button\"} onClick={() => showModal(1)}>修改密码</button>\r\n            </label>\r\n        </form>\r\n\r\n        <Modal centered title={\"修改账号\"} visible={visible[0]}\r\n               onOk={() => handleForm(true)} okText=\"提交\"\r\n               onCancel={() => setVisible([false, false])}\r\n               cancelText=\"取消\">\r\n            <Form\r\n                form={form1}\r\n            >\r\n                <Form.Item\r\n                    name={\"newPhone\"}\r\n                    label={\"账号\"}\r\n                    required\r\n                >\r\n                    <Input placeholder={\"请输入新手机号\"} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name={\"code\"}\r\n                    label={\"验证码\"}\r\n                    required\r\n                >\r\n                    <Input placeholder={\"请输入验证码\"} style={{width: 250}} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button htmlType={\"button\"} type={\"primary\"} onClick={() => getCode(form1.getFieldValue(\"newPhone\"))}>\r\n                        获取验证码\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n\r\n        <Modal centered title={\"修改密码\"} visible={visible[1]}\r\n               onOk={() => handleForm(false)} okText=\"提交\"\r\n               onCancel={() => setVisible([false, false])}\r\n               cancelText=\"取消\">\r\n            <Form form={form2}>\r\n                <Form.Item name={\"oldPassword\"} label={\"原密码\"} required>\r\n                    <Input.Password placeholder={\"请输入\"} />\r\n                </Form.Item>\r\n                <Form.Item name={\"newPassword\"} label={\"新密码\"} required>\r\n                    <Input.Password placeholder={\"请输入\"} />\r\n                </Form.Item>\r\n                <Form.Item name={\"confirm\"} label={\"确认新密码\"} required\r\n                    rules={[\r\n                        {required: true},\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                                if (!value || getFieldValue(\"newPassword\") === value)\r\n                                    return Promise.resolve();\r\n                                return Promise.reject(new Error(\"两次输入密码不匹配\"));\r\n                            }\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password placeholder={\"请输入\"} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    </>\r\n}","import {myAxios} from \"./myAxios\";\r\n\r\n// 管理员获取验证码\r\nexport const verificationCode = (id: string, phone: string) => {\r\n    const data = new FormData();\r\n    data.append(\"id\", id);\r\n    data.append(\"newPhone\", phone);\r\n    return myAxios.post(\"/admin/getCode\", data)\r\n}\r\n\r\n// 修改手机号\r\nexport const modifyPhone = (id: string, phone: string, code: string) => {\r\n    const data = new FormData();\r\n    data.append(\"id\", id);\r\n    data.append(\"newPhone\", phone);\r\n    data.append(\"code\", code);\r\n    return myAxios.post(\"/admin/modifyPhone\", data)\r\n}\r\n\r\n// 修改密码\r\nexport const modifyPwd = (id: string, oldPwd: string, newPwd: string) => {\r\n    const data = new FormData();\r\n    data.append(\"id\", id);\r\n    data.append(\"oldPassword\", oldPwd);\r\n    data.append(\"newPassword\", newPwd);\r\n    return myAxios.post(\"/admin/modifyPassword\", data)\r\n}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (): string | null {\r\n    return localStorage.getItem(\"username\");\r\n}"],"names":["getId","localStorage","getItem","Set","useState","Array","fill","visible","setVisible","form1","form2","showModal","order","arr","res","getCode","phone","id","message","data","FormData","append","myAxios","verificationCode","then","err","response","handleForm","flag","validateFields","val","code","modifyPhone","newPhone","resetFields","info","oldPassword","newPassword","oldPwd","newPwd","modifyPwd","className","type","placeholder","onClick","centered","title","onOk","okText","onCancel","cancelText","form","name","label","required","style","width","htmlType","getFieldValue","rules","validator","_","value","Promise","reject","Error","resolve"],"sourceRoot":""}