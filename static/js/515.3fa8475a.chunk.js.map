{"version":3,"file":"static/js/515.3fa8475a.chunk.js","mappings":"gMAGaA,EAAU,SAACC,GACpB,IAAMC,EAAO,IAAIC,SAEjB,OADAD,EAAKE,OAAO,UAAWH,EAAO,IACvBI,EAAAA,EAAAA,KAAa,cAAeH,EACtC,EAUYI,EAAY,SAACC,GACtB,IAAML,EAAO,IAAIC,SAEjB,OADAD,EAAKE,OAAO,KAAMG,IACXF,EAAAA,EAAAA,GAAQ,gBAAiB,CAACH,KAAAA,GACpC,C,sMCGKM,EAAW,CACb,EAAG,qBACH,EAAG,sBAGQ,SAASC,IAEpB,IAAMC,EAAiC,CACnC,CACIC,MAAO,eACPC,UAAW,MACXC,IAAK,MACLC,MAAM,UACP,CACCH,MAAO,iBACPC,UAAW,KACXC,IAAK,KACLC,MAAO,UACR,CACCH,MAAO,2BACPC,UAAW,OACXC,IAAK,OACLC,MAAM,UACP,CACCH,MAAO,uCACPC,UAAW,QACXC,IAAK,QACLC,MAAM,UACP,CACCH,MAAO,2BACPC,UAAW,SACXC,IAAK,SACLC,MAAM,SACNC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,cACtBC,KAAM,OACNC,QAAS,kBAAMC,EAAU,2BAAQH,EAAOI,OAA/B,EAFa,qCAAlB,GAGT,CACCV,MAAO,2BACPC,UAAW,SACXC,IAAK,UACLC,MAAM,SACNC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,cACtBC,KAAM,OACNC,QAAS,kBAAMC,EAAU,2BAAQH,EAAOK,OAA/B,EAFa,qCAAlB,GAGT,CACCX,MAAO,2BACPC,UAAW,QACXC,IAAK,SACLC,MAAM,SACNC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,cACtBC,KAAM,OACNC,QAAS,kBAAMC,EAAU,2BAAQH,EAAOK,OAA/B,EAFa,qCAAlB,GAGT,CACCX,MAAO,2BACPC,UAAW,SACXC,IAAK,QACLC,MAAM,SACNC,OAAQ,SAACQ,GAAD,OAAsB,iBAC1BC,MAAiB,MAAVD,EACD,CAACE,MAAM,SACP,CAACA,MAAM,OAHa,SAI5BjB,EAASe,IAJH,GAKT,CACCZ,MAAO,eACPE,IAAK,KACLC,MAAM,SACNC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,SAAC,KAAD,CACtBS,GAAI,eACJH,MAAO,CACHI,GAAIV,EAAOW,IAHO,qCAAlB,IAShB,GAAwBC,EAAAA,EAAAA,UAAqB,IAA7C,eAAO3B,EAAP,KAAa4B,EAAb,KACA,GAAwCD,EAAAA,EAAAA,UAAuB,CAC3DE,SAAS,EACTpB,MAAO,GACPqB,QAAS,KAHb,eAAOC,EAAP,KAAqBC,EAArB,KAMMd,EAAY,SAACT,EAAeqB,GAC9BE,EAAgB,CACZF,QAASA,GAAW,2BACpBrB,MAAOA,GAAS,eAChBoB,SAAS,GAEhB,EACKI,EAAS,kBAAMD,EAAgB,CACjCH,SAAS,EACTC,QAAS,eACTrB,MAAO,gBAHI,EAmBf,OAZAyB,EAAAA,EAAAA,YAAU,YACNpC,EAAAA,EAAAA,IAAQ,GAAGqC,MAAK,SAAAC,GACZ,IAAMC,EAAmBD,EAAIpC,KAAKA,KAAKsC,YACvCD,EAAKE,SAAQ,SAAAC,GACTA,EAAK7B,IAAM6B,EAAKC,MACnB,IACDb,EAAQS,EACX,IAAE,SAAAK,GACC,OAAO,WAAcA,EAAIC,SAAS3C,KAAK4C,QAC1C,GACJ,GAAE,KAGC,iCACI,cAAOpC,QAASA,EAASqC,WAAY7C,KACrC,cACI8C,UAAQ,EACRjB,QAASE,EAAaF,QACtBpB,MAAOsB,EAAatB,MACpBsC,KAAMd,EACNe,SAAUf,EALd,UAOI,uBAAIF,EAAaD,cAIhC,C","sources":["api/eventApi.ts","views/Event/Event.tsx"],"sourcesContent":["import {myAxios} from \"./myAxios\";\r\n\r\n// 获取全部事件\r\nexport const getList = (page: number) => {\r\n    const data = new FormData();\r\n    data.append(\"current\", page + '');\r\n    return myAxios.post(\"/event/list\", data)\r\n}\r\n\r\n// 电话检索事件\r\nexport const searchEvent = (keyword: string) => {\r\n    const data = new FormData();\r\n    data.append(\"keyword\", keyword);\r\n    return myAxios.post(\"/event/search\", data);\r\n}\r\n\r\n// 事件详情\r\nexport const getDetail = (eventId: string) => {\r\n    const data = new FormData();\r\n    data.append(\"id\", eventId);\r\n    return myAxios(\"/event/detail\", {data});\r\n}","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Button, message, Modal, Table} from \"antd\";\r\nimport {ColumnsType} from \"antd/es/table\";\r\nimport {Link} from 'react-router-dom';\r\nimport {getList} from \"../../api/eventApi\";\r\n\r\ninterface DataType {\r\n    key: React.Key,\r\n    Number: number,\r\n    Id: string, // 事件id\r\n    Type: string,\r\n    Phone: string,\r\n    Detail: string,\r\n    ImgUrl: string,\r\n    VidUrl: string,\r\n    Status: string\r\n}\r\ninterface ModalContent {\r\n    visible: boolean,\r\n    title: string,\r\n    content: string,\r\n}\r\n\r\nconst stateMap = {\r\n    0: \"已处理\",\r\n    1: \"未处理\",\r\n}\r\n\r\nexport default function Event() {\r\n\r\n    const columns: ColumnsType<DataType> = [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"key\",\r\n            key: \"key\",\r\n            align:'center'\r\n        }, {\r\n            title: \"事件Id\",\r\n            dataIndex: \"Id\",\r\n            key: \"id\",\r\n            align: \"center\",\r\n        }, {\r\n            title: \"事件类型\",\r\n            dataIndex: \"Type\",\r\n            key: \"type\",\r\n            align:'center'\r\n        }, {\r\n            title: \"报告人手机号\",\r\n            dataIndex: \"Phone\",\r\n            key: \"phone\",\r\n            align:'center'\r\n        }, {\r\n            title: \"事件描述\",\r\n            dataIndex: \"Detail\",\r\n            key: \"detail\",\r\n            align:'center',\r\n            render: (text, record) => <Button\r\n                type={\"link\"}\r\n                onClick={() => showModal(\"事件描述\", record.Detail)}>查看内容</Button>,\r\n        }, {\r\n            title: \"事件图片\",\r\n            dataIndex: \"ImgUrl\",\r\n            key: \"picture\",\r\n            align:'center',\r\n            render: (text, record) => <Button\r\n                type={\"link\"}\r\n                onClick={() => showModal(\"查看图片\", record.VidUrl)}>查看图片</Button>,\r\n        }, {\r\n            title: \"事件视频\",\r\n            dataIndex: \"video\",\r\n            key: \"VidUrl\",\r\n            align:'center',\r\n            render: (text, record) => <Button\r\n                type={\"link\"}\r\n                onClick={() => showModal(\"查看视频\", record.VidUrl)}>查看视频</Button>,\r\n        }, {\r\n            title: \"处理状态\",\r\n            dataIndex: \"Status\",\r\n            key: \"state\",\r\n            align:'center',\r\n            render: (state: \"1\" | \"0\") => <span\r\n                style={state === '0'\r\n                    ? {color:\"green\"}\r\n                    : {color:\"red\"}}\r\n            >{stateMap[state]}</span>\r\n        }, {\r\n            title: \"操作\",\r\n            key: \"op\",\r\n            align:'center',\r\n            render: (text, record) => <Link\r\n                to={\"/home/detail\"}\r\n                state={{\r\n                    id: record.Id,\r\n                }}\r\n            >查看详情</Link>\r\n        },\r\n    ];\r\n\r\n    const [data, setData] = useState<DataType[]>([]);\r\n    const [modalContent, setModalContent] = useState<ModalContent>({\r\n        visible: false,\r\n        title: \"\",\r\n        content: \"\",\r\n    });\r\n\r\n    const showModal = (title: string, content?: string) => {\r\n        setModalContent({\r\n            content: content || \"暂无内容\",\r\n            title: title || \"查看\",\r\n            visible: true,\r\n        })\r\n    }\r\n    const handle = () => setModalContent({\r\n        visible: false,\r\n        content: \"暂无\",\r\n        title: \"查看\",\r\n    })\r\n\r\n    // 请求事件列表\r\n    useEffect(() => {\r\n        getList(1).then(res => {\r\n            const list: DataType[] = res.data.data.stationList;\r\n            list.forEach(item => {\r\n                item.key = item.Number;\r\n            })\r\n            setData(list)\r\n        }, err => {\r\n            return message.error(err.response.data.message);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Table columns={columns} dataSource={data}/>\r\n            <Modal\r\n                centered\r\n                visible={modalContent.visible}\r\n                title={modalContent.title}\r\n                onOk={handle}\r\n                onCancel={handle}\r\n            >\r\n                <p>{modalContent.content}</p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n"],"names":["getList","page","data","FormData","append","myAxios","getDetail","eventId","stateMap","Event","columns","title","dataIndex","key","align","render","text","record","type","onClick","showModal","Detail","VidUrl","state","style","color","to","id","Id","useState","setData","visible","content","modalContent","setModalContent","handle","useEffect","then","res","list","stationList","forEach","item","Number","err","response","message","dataSource","centered","onOk","onCancel"],"sourceRoot":""}